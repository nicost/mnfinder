import ij.IJ;
import ij.plugin.frame.RoiManager;
import ij.gui.Roi;
import ij.gui.PolygonRoi;
import java.util.Arrays;

import org.micromanager.projector.ProjectorControlForm;
import org.micromanager.MultiStagePosition;

channelGroup = "Channel";
imagingChannel = "Cy5";
conversionChannel = "DAPI";
conversionTimeMs = 1000;

minSize = 25.0;
maxSize = 800.0;


// we will use MMCore multiple times, so get it here
core = mm.getCMMCore();

// open the Projector plugin
pcf = ProjectorControlForm.showSingleton(core, mm);

// the ImageJ roiManager	
roiManager = RoiManager.getInstance2();

// get the current positionlist from Micro-Manager
pm = mm.getPositionListManager();
pl = pm.getPositionList();
positions = pl.getPositions();

int counter = 0;
for (position : positions) {
	counter++;
	MultiStagePosition.goToPosition(position, core);
	core.setConfig(channelGroup, imagingChannel);
	// snap an image and in a convoluted way get it out as an ImageJ ImagePlus object
	mm.scripter().message("Snapping image #" + counter);
	mm.live().snap(true);
	dw = mm.live().getDisplay();
	ip = dw.getImagePlus().duplicate();

	IJ.setAutoThreshold(ip, "Otsu Dark");
	IJ.run("Set Measurements...", "area centroid center bounding fit shape redirect=None decimal=2");
	IJ.run(ip, "Analyze Particles...", "size=" + minSize + "-" + maxSize + 
			" exclude clear add");

	Roi[] rois = roiManager.getRoisAsArray();
	Roi[] polygonRois = new PolygonRoi[rois.length];
	for (int i = 0; i < rois.length; i++) {
		polygonRois[i] = new PolygonRoi(rois[i].getConvexHull(), Roi.POLYGON);
	}

	pcf.setROIs(polygonRois);
	pcf.runRois();

}

mm.scripter().message("done!");



